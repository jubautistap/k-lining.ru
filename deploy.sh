#!/bin/bash

# –î–µ–ø–ª–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è K-lining
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç git, –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π K-lining..."

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
SERVER_HOST="80.87.201.107"
SERVER_USER="root"
SERVER_PATH="/var/www/kliningpro"
PM2_APP_NAME="kliningpro"
# –í–µ—Ç–∫–∞ –¥–ª—è –¥–µ–ø–ª–æ—è:
# 1) –µ—Å–ª–∏ –∑–∞–¥–∞–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è BRANCH ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
# 2) –∏–Ω–∞—á–µ –ø—ã—Ç–∞–µ–º—Å—è –≤–∑—è—Ç—å —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ç–∫—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
# 3) –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî main
LOCAL_BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "")
BRANCH="${BRANCH:-${LOCAL_BRANCH:-main}}"

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø—É—à–∏–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º, –µ—Å–ª–∏ AUTO_PUSH=1
AUTO_PUSH=${AUTO_PUSH:-0}

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –õ–æ–∫–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤–µ—Ç–∫–∏/–∫–æ–º–º–∏—Ç–∞
LOCAL_COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
print_status "–õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ç–∫–∞: $BRANCH (commit: $LOCAL_COMMIT)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–¥–∞–ª—ë–Ω–Ω–∞—è –≤–µ—Ç–∫–∞ origin/$BRANCH
if git ls-remote --exit-code --heads origin "$BRANCH" >/dev/null 2>&1; then
  print_status "–£–¥–∞–ª—ë–Ω–Ω–∞—è –≤–µ—Ç–∫–∞ origin/$BRANCH —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
  print_warning "–£–¥–∞–ª—ë–Ω–Ω–∞—è –≤–µ—Ç–∫–∞ origin/$BRANCH –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø—Ä–∏ –ø—É—à–µ"
fi

# –ï—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω –∞–≤—Ç–æ-–ø—É—à ‚Äî –æ—Ç–ø—Ä–∞–≤–∏–º –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ç–∫—É –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º
if [ "$AUTO_PUSH" = "1" ]; then
  print_status "–ê–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –≤–µ—Ç–∫–∏ –≤ origin ($BRANCH)"
  if ! git push -u origin "$BRANCH"; then
    print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å git push –ª–æ–∫–∞–ª—å–Ω–æ–π –≤–µ—Ç–∫–∏ $BRANCH"
    exit 1
  fi
else
  print_warning "AUTO_PUSH=0 ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é –ª–æ–∫–∞–ª—å–Ω—ã–π git push. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ origin/$BRANCH –∞–∫—Ç—É–∞–ª—å–Ω–∞."
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º SSH –∞–≥–µ–Ω—Ç –µ—Å–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω
print_status "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH –∞–≥–µ–Ω—Ç..."
eval $(ssh-agent -s)
ssh-add ~/.ssh/id_rsa 2>/dev/null

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh -o ConnectTimeout=10 $SERVER_USER@$SERVER_HOST "echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'" 2>/dev/null; then
    print_error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SERVER_HOST"
    print_warning "–ó–∞–ø—É—Å—Ç–∏—Ç–µ ./setup-ssh.sh –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH –∫–ª—é—á–µ–π"
    exit 1
fi

print_status "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å–ø–µ—à–Ω–æ!"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
print_status "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞..."
ssh $SERVER_USER@$SERVER_HOST "cd $SERVER_PATH" || {
    print_error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–ø–∫—É $SERVER_PATH"
    exit 1
}

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
print_status "–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)..."
ssh $SERVER_USER@$SERVER_HOST "cd $SERVER_PATH && if [ -n \"$(git status --porcelain)\" ]; then git stash push -m '–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º'; fi"

# –û–±–Ω–æ–≤–ª—è–µ–º git
print_status "–û–±–Ω–æ–≤–ª—è–µ–º git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–≤–µ—Ç–∫–∞: $BRANCH)..."
# –ñ–µ—Å—Ç–∫–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ç–∫—É —Å origin/$BRANCH
ssh $SERVER_USER@$SERVER_HOST "cd $SERVER_PATH && git fetch --all --prune"
ssh $SERVER_USER@$SERVER_HOST "cd $SERVER_PATH && \
  git fetch --all --prune && \
  if git show-ref --verify --quiet refs/remotes/origin/$BRANCH; then \
    echo '‚Üí –ù–∞–π–¥–µ–Ω–∞ origin/$BRANCH'; \
    git checkout -B $BRANCH origin/$BRANCH; \
  else \
    echo '‚Üí origin/$BRANCH –Ω–µ –Ω–∞–π–¥–µ–Ω–∞; –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ origin/main'; \
    git checkout -B main origin/main; \
  fi && \
  echo '–¢–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ–º–º–∏—Ç:' && git --no-pager log -1 --oneline"

if [ $? -eq 0 ]; then
    print_status "Git —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω! –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $BRANCH"
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ git"
    exit 1
fi

# –ö–æ–ø–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ CSV (–µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å –º–∞–∫–∞ –∏ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if [ -d "./SEo" ]; then
  print_status "–ó–∞–≥—Ä—É–∂–∞–µ–º SEo/ (CSV) –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ rsync..."
  # –ß–∏—Å—Ç–∏–º —É–¥–∞–ª—ë–Ω–Ω—É—é –ø–∞–ø–∫—É –æ–¥–∏–Ω —Ä–∞–∑, —á—Ç–æ–±—ã —É—Å—Ç—Ä–∞–Ω–∏—Ç—å —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è –ø—Ä–æ—à–ª—ã—Ö –∑–∞–ª–∏–≤–æ–∫
  ssh $SERVER_USER@$SERVER_HOST "rm -rf $SERVER_PATH/SEo && mkdir -p $SERVER_PATH/SEo"
  rsync -az --delete-after \
    --exclude '.DS_Store' \
    --exclude '._*' \
    --exclude '.git*' \
    -e "ssh" ./SEo/ $SERVER_USER@$SERVER_HOST:$SERVER_PATH/SEo/ || \
    print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å SEo/ (rsync), –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ CSV"
else
  print_warning "–õ–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–ø–∫–∞ ./SEo –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é –∑–∞–≥—Ä—É–∑–∫—É CSV"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
print_status "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
ssh $SERVER_USER@$SERVER_HOST "cd $SERVER_PATH && npm ci"

if [ $? -eq 0 ]; then
    print_status "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit 1
fi

# –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
print_status "–°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
# –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
print_status "ENV preview (–ª–æ–∫–∞–ª—å–Ω–æ): $(grep -E '^(NEXT_PUBLIC|NODE_ENV)' .env 2>/dev/null | sed 's/=.*/=*** /')"
# postbuild (next-sitemap) –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∫ lifecycle-—Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ build
ssh $SERVER_USER@$SERVER_HOST "cd $SERVER_PATH && \
  echo 'ENV preview (server .env):' && (grep -E '^(NEXT_PUBLIC|NODE_ENV)' .env 2>/dev/null | sed 's/=.*/=*** /' || echo '–Ω–µ—Ç .env') && \
  if ls prisma/migrations/*/migration.sql >/dev/null 2>&1; then echo 'Found migrations ‚Üí running migrate deploy'; npx prisma migrate deploy; else echo 'No migrations found ‚Üí running prisma generate only'; npx prisma generate; fi && \
  npm ci && npm run build && npm run postbuild:yandex"

if [ $? -eq 0 ]; then
    print_status "–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω!"
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º PM2 –ø—Ä–æ—Ü–µ—Å—Å —Ç–æ—á–µ—á–Ω–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–µ—Ç–∫–∏
print_status "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º PM2 –ø—Ä–æ—Ü–µ—Å—Å..."
ssh $SERVER_USER@$SERVER_HOST "cd $SERVER_PATH && \
  CURRENT=$(git rev-parse --abbrev-ref HEAD); \
  echo '–°–µ—Ä–≤–µ—Ä–Ω–∞—è –≤–µ—Ç–∫–∞:' $CURRENT; \
  pm2 restart $PM2_APP_NAME --update-env && sleep 2 && bash scripts/warmup-urls.sh http://localhost:3000 || true"

if [ $? -eq 0 ]; then
    print_status "PM2 –ø—Ä–æ—Ü–µ—Å—Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ PM2"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
ssh $SERVER_USER@$SERVER_HOST "pm2 status"

print_status "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ! üéâ"
print_status "–°–∞–π—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://k-lining.ru" 