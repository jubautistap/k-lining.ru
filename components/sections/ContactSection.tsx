'use client';

import { motion } from 'framer-motion';
import { Phone, Mail, MapPin, Clock, MessageSquare, Send } from 'lucide-react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { z } from 'zod';
import toast from 'react-hot-toast';

const contactFormSchema = z.object({
  name: z.string().min(2, '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞'),
  phone: z.string().min(10, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'),
  email: z.string().email('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email').optional().or(z.literal('')),
  message: z.string().min(10, '–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤'),
});

type ContactFormData = z.infer<typeof contactFormSchema>;

export default function ContactSection() {
  const {
    register,
    handleSubmit,
    reset,
    formState: { errors, isSubmitting },
  } = useForm<ContactFormData>({
    resolver: zodResolver(contactFormSchema),
  });

  const onSubmit = async (data: ContactFormData) => {
    try {
      const response = await fetch('/api/admin/leads', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          name: data.name,
          phone: data.phone,
          email: data.email || '',
          service: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞',
          message: data.message,
        }),
      });

      if (response.ok) {
        toast.success('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
        reset();
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
      }
    } catch (error) {
      console.error('Error submitting form:', error);
      toast.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  };

  const contactInfo = [
    {
      icon: Phone,
      title: '–¢–µ–ª–µ—Ñ–æ–Ω',
      value: '+7 (925) 555-18-33',
      description: '24/7 –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
    },
    {
      icon: Mail,
      title: 'Email',
              value: 'info@k-lining.ru',
      description: '–û—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞'
    },
    {
      icon: MapPin,
      title: '–†–µ–≥–∏–æ–Ω —Ä–∞–±–æ—Ç—ã',
      value: '–ú–æ—Å–∫–≤–∞ –∏ –ú–û',
      description: '–í—ã–µ–∑–∂–∞–µ–º –ø–æ –≤—Å–µ–π –æ–±–ª–∞—Å—Ç–∏'
    },
    {
      icon: Clock,
      title: '–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã',
      value: '–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ',
      description: '–ë–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö'
    }
  ];

  return (
    <section className="section-padding bg-white">
      <div className="container-custom">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.6 }}
          className="text-center mb-16"
        >
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-6">
            –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
            –ì–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º —É—Å–ª—É–≥. 
            <strong>–ó–≤–æ–Ω–∏—Ç–µ –∏–ª–∏ –ø–∏—à–∏—Ç–µ ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!</strong>
          </p>
        </motion.div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
          {/* Contact Info */}
          <motion.div
            initial={{ opacity: 0, x: -50 }}
            whileInView={{ opacity: 1, x: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
          >
            <h3 className="text-2xl font-bold text-gray-900 mb-8">
              –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </h3>
            
            <div className="space-y-6">
              {contactInfo.map((info, index) => (
                <motion.div
                  key={info.title}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  className="flex items-start space-x-4"
                >
                  <div className="w-12 h-12 bg-primary-100 rounded-lg flex items-center justify-center flex-shrink-0">
                    <info.icon className="w-6 h-6 text-primary-600" />
                  </div>
                  <div>
                    <h4 className="text-lg font-semibold text-gray-900 mb-1">
                      {info.title}
                    </h4>
                    <p className="text-primary-600 font-medium text-lg mb-1">
                      {info.value}
                    </p>
                    <p className="text-gray-600 text-sm">
                      {info.description}
                    </p>
                  </div>
                </motion.div>
              ))}
            </div>

            {/* Additional Info */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.6, delay: 0.6 }}
              className="mt-12 p-6 bg-gradient-to-r from-primary-50 to-secondary-50 rounded-xl"
            >
              <h4 className="text-lg font-semibold text-gray-900 mb-4">
                üí° –ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∞–º?
              </h4>
              <ul className="space-y-2 text-gray-700">
                <li className="flex items-center space-x-2">
                  <div className="w-1.5 h-1.5 bg-primary-600 rounded-full"></div>
                  <span>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏ —Ä–∞—Å—á–µ—Ç</span>
                </li>
                <li className="flex items-center space-x-2">
                  <div className="w-1.5 h-1.5 bg-primary-600 rounded-full"></div>
                  <span>–û—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç</span>
                </li>
                <li className="flex items-center space-x-2">
                  <div className="w-1.5 h-1.5 bg-primary-600 rounded-full"></div>
                  <span>–†–∞–±–æ—Ç–∞–µ–º –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É</span>
                </li>
                <li className="flex items-center space-x-2">
                  <div className="w-1.5 h-1.5 bg-primary-600 rounded-full"></div>
                  <span>–û–ø–ª–∞—Ç–∞ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç</span>
                </li>
              </ul>
            </motion.div>
          </motion.div>

          {/* Contact Form */}
          <motion.div
            initial={{ opacity: 0, x: 50 }}
            whileInView={{ opacity: 1, x: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6, delay: 0.2 }}
            className="bg-white rounded-2xl shadow-lg p-8 border border-gray-100"
          >
            <div className="flex items-center space-x-3 mb-6">
              <div className="w-10 h-10 bg-primary-600 rounded-lg flex items-center justify-center">
                <MessageSquare className="w-5 h-5 text-white" />
              </div>
              <div>
                <h3 className="text-xl font-bold text-gray-900">
                  –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º
                </h3>
                <p className="text-gray-600 text-sm">
                  –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏
                </p>
              </div>
            </div>

            <form onSubmit={handleSubmit(onSubmit)} className="space-y-6">
              {/* Name Field */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –í–∞—à–µ –∏–º—è *
                </label>
                <input
                  {...register('name')}
                  type="text"
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-200"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                />
                {errors.name && (
                  <p className="text-red-500 text-sm mt-1">{errors.name.message}</p>
                )}
              </div>

              {/* Phone Field */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ *
                </label>
                <input
                  {...register('phone')}
                  type="tel"
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-200"
                  placeholder="+7 (999) 123-45-67"
                />
                {errors.phone && (
                  <p className="text-red-500 text-sm mt-1">{errors.phone.message}</p>
                )}
              </div>

              {/* Email Field */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Email (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
                </label>
                <input
                  {...register('email')}
                  type="email"
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-200"
                  placeholder="your@email.com"
                />
                {errors.email && (
                  <p className="text-red-500 text-sm mt-1">{errors.email.message}</p>
                )}
              </div>

              {/* Message Field */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –°–æ–æ–±—â–µ–Ω–∏–µ *
                </label>
                <textarea
                  {...register('message')}
                  rows={4}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-200 resize-none"
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è—Ö..."
                />
                {errors.message && (
                  <p className="text-red-500 text-sm mt-1">{errors.message.message}</p>
                )}
              </div>

              {/* Submit Button */}
              <button
                type="submit"
                disabled={isSubmitting}
                className="w-full btn-primary py-4 text-lg font-semibold disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2"
              >
                {isSubmitting ? (
                  <>
                    <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                    <span>–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...</span>
                  </>
                ) : (
                  <>
                    <Send className="w-5 h-5" />
                    <span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</span>
                  </>
                )}
              </button>

              {/* Trust Indicators */}
              <div className="text-center text-xs text-gray-500 space-y-2">
                <div className="flex items-center justify-center space-x-2">
                  <div className="w-4 h-4 bg-primary-600 rounded-full flex items-center justify-center">
                    <svg className="w-2.5 h-2.5 text-white" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                  </div>
                  <span>–ë–µ–∑ —Å–ø–∞–º–∞ –∏ –Ω–∞–≤—è–∑—á–∏–≤—ã—Ö –∑–≤–æ–Ω–∫–æ–≤</span>
                </div>
                <div className="flex items-center justify-center space-x-2">
                  <div className="w-4 h-4 bg-primary-600 rounded-full flex items-center justify-center">
                    <svg className="w-2.5 h-2.5 text-white" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                  </div>
                  <span>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞</span>
                </div>
                <div className="flex items-center justify-center space-x-2">
                  <div className="w-4 h-4 bg-primary-600 rounded-full flex items-center justify-center">
                    <svg className="w-2.5 h-2.5 text-white" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                  </div>
                  <span>–†–∞–±–æ—Ç–∞–µ–º –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É</span>
                </div>
              </div>
            </form>
          </motion.div>
        </div>
      </div>
    </section>
  );
} 